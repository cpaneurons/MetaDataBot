import traceback

from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext

from bot.create_bot import dp, bot
from databases.database import VisuallyDB, FileDb
from image_handlers.keyboard_markup import keyboard_universalizer
from keyboard_stop_fsm import keyboard_stop_fsm
from image_handlers.fsm import FSMUniversalizer
from replacement_exif import replacement_exif_for_photo
from video_uniqueization import replacement_exif_for_video
from log.log import logger


# @dp.message_handler(Text(equals=['üåÑ –£–Ω–∏–∫–∞–ª–∏–∑–∞—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤']), commands=['unique'])
async def start_universalizer(message: Message):
    """–ù–∞—á–∞–ª–æ —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏–∏. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤—ã–±–æ—Ä —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ"""
    if message.chat.type == 'private':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ', reply_markup=keyboard_universalizer)


# @dp.callback_query_handler(Text(startswith='universalizer_'))
async def waiting_for_unique_file(callback: CallbackQuery):
    await callback.answer()
    visuall_db = VisuallyDB()
    mediafile = callback.data[14:]
    message = None

    if mediafile == 'photo':
        message = await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–µ–∑ —Å–∂–∞—Ç–∏—è (—Ñ–∞–π–ª–æ–º)\n\n'
                                                '‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –≤ Telegram –µ—Å—Ç—å '
                                                '–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞. '
                                                '–§–∞–π–ª –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å –±–æ–ª–µ–µ 20 –ú–ë‚ö†Ô∏è',
                                                reply_markup=keyboard_stop_fsm)
        await FSMUniversalizer.photo.set()

    elif mediafile == 'video':
        message = await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ (—Ñ–∞–π–ª–æ–º)\n\n'
                                                '‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –≤ Telegram –µ—Å—Ç—å'
                                                ' –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞. '
                                                '–§–∞–π–ª –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å –±–æ–ª–µ–µ 20 –ú–ë‚ö†Ô∏è',
                                                reply_markup=keyboard_stop_fsm)
        await FSMUniversalizer.video.set()

    visuall_db.add_message_id(user_id=callback.from_user.id, message_id=message.message_id)


# @dp.message_handler(state=FSMUniversalizer.photo, content_types=['any'])
async def universalizer_photo(message: Message, state: FSMContext):
    if message.document:
        if message.document.mime_type[:5] == 'image':
            visual_db = VisuallyDB()
            file_info = await bot.get_file(message.document.file_id)
            try:
                # delete message
                message_id = visual_db.get_message_id(user_id=message.from_user.id)
                await bot.delete_message(message.chat.id, message_id=message_id)
                visual_db.delete_all_by_user_id(message.from_user.id)

                message_universalizer = await message.answer('–ù–∞—á–∏–Ω–∞—é —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—é...\n\n'
                                                             'üü©‚óª‚óª‚óª‚óª‚óª‚óª‚óª‚óª‚óª')

                await message.document.download()
                file_path = file_info.file_path
                new_path = await replacement_exif_for_photo(file_path, message_id=message_universalizer.message_id,
                                                            chat_id=message_universalizer.chat.id)
                with open(new_path, 'rb') as file_obj:
                    await bot.send_document(chat_id=message.chat.id, document=file_obj)

                await message_universalizer.edit_text('–ì–æ—Ç–æ–≤–æ!')
                await state.finish()
            except Exception:
                await message.answer('–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—é')
                traceback.print_exc()
                logger.warning(f'–í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ \n{traceback.print_exc()}')
            finally:
                pass
                # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                # time.sleep(400)
                # if os.path.isfile(file_info.file_path):
                #     os.remove(file_info.file_path)
                #
                # if os.path.isfile(new_path):
                #     os.remove(new_path)
        else:
            await message.answer('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
    else:
        await message.answer('–û–∂–∏–¥–∞–ª–æ—Å—å —Ñ–æ—Ç–æ(—Ñ–∞–π–ª). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã '
                             '"/stop"')


# @dp.message_handler(state=FSMUniversalizer.video, content_types=['any'])
async def universalizer_video(message: Message, state: FSMContext):
    if message.document:
        if message.document.mime_type[:5] == 'video':
            await state.finish()
            visual_db = VisuallyDB()
            file_db = FileDb()
            file_info = await bot.get_file(message.document.file_id)
            try:
                # delete message
                message_id = visual_db.get_message_id(user_id=message.from_user.id)
                await bot.delete_message(message.chat.id, message_id=message_id)
                visual_db.delete_all_by_user_id(message.from_user.id)

                message_universalizer = await message.answer('–ù–∞—á–∏–Ω–∞—é —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—é...\n\n'
                                                             'üü©‚óª‚óª‚óª‚óª‚óª‚óª‚óª‚óª‚óª')

                await message.document.download()
                file_path = file_info.file_path
                new_path = await replacement_exif_for_video(file_path, message_id=message_universalizer.message_id,
                                                            chat_id=message_universalizer.chat.id,
                                                            user_id=message.from_user.id)
                with open(new_path, 'rb') as file_obj:
                    await bot.send_video(chat_id=message.chat.id, video=file_obj)

                await message_universalizer.edit_text('–ì–æ—Ç–æ–≤–æ!')
            except Exception:
                await message.answer('–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—é')
                traceback.print_exc()
                logger.warning(f'–í–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ \n{traceback.print_exc()}')
            finally:
                if file_db.file_exists(user_id=message.from_user.id):
                    file_db.delete_all_by_user_id(user_id=message.from_user.id)
                # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                # time.sleep(400)
                # if os.path.isfile(file_info.file_path):
                #     os.remove(file_info.file_path)
                #
                # if os.path.isfile(new_path):
                #     os.remove(new_path)
        else:
            await message.answer('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∏–¥–µ–æ')
    else:
        await message.answer('–û–∂–∏–¥–∞–ª–æ—Å—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã '
                             '"/stop"')


def register_image_handlers(dp: dp):
    dp.register_message_handler(start_universalizer, Text(equals=['üåÑ –£–Ω–∏–∫–∞–ª–∏–∑–∞—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤ üì∑', '–£–Ω–∏–∫–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å']))
    dp.register_message_handler(start_universalizer, commands=['universalizer', 'us'])
    dp.register_callback_query_handler(waiting_for_unique_file, Text(startswith='universalizer_'), state=None)
    dp.register_message_handler(universalizer_photo, state=FSMUniversalizer.photo, content_types=['any'])
    dp.register_message_handler(universalizer_video, state=FSMUniversalizer.video, content_types=['any'])
